[
{
	"uri": "//localhost:1313/vi/1-introduce/",
	"title": "Gi∆°ÃÅi thi√™Ã£u",
	"tags": [],
	"description": "",
	"content": "Gi·ªõi thi·ªáu\nTrong c√°c h·ªá th·ªëng hi·ªán ƒë·∫°i, vi·ªác x·ª≠ l√Ω d·ªØ li·ªáu theo h∆∞·ªõng s·ª± ki·ªán l√† ph∆∞∆°ng ph√°p ph·ªï bi·∫øn ƒë·ªÉ x√¢y d·ª±ng c√°c pipeline linh ho·∫°t, ti·∫øt ki·ªám chi ph√≠ v√† d·ªÖ m·ªü r·ªông. Workshop n√†y h∆∞·ªõng d·∫´n b·∫°n c√°ch x√¢y d·ª±ng m·ªôt h·ªá th·ªëng x·ª≠ l√Ω s·ª± ki·ªán ph·ª©c t·∫°p b·∫Øt ngu·ªìn t·ª´ Amazon S3, ƒëi·ªÅu ph·ªëi b·ªüi AWS Step Functions v√† x·ª≠ l√Ω b·ªüi AWS Lambda.\nB·∫°n s·∫Ω h·ªçc c√°ch t√≠ch h·ª£p nhi·ªÅu d·ªãch v·ª• AWS ƒë·ªÉ t·∫°o th√†nh m·ªôt quy tr√¨nh x·ª≠ l√Ω t·ª± ƒë·ªông h√≥a kh√¥ng m√°y ch·ªß (serverless), c√≥ kh·∫£ nƒÉng ki·ªÉm so√°t l·ªói, retry v√† theo d√µi tr·∫°ng th√°i c·ªßa to√†n b·ªô lu·ªìng c√¥ng vi·ªác.\nM·ª•c ti√™u\nSau khi ho√†n th√†nh workshop, b·∫°n s·∫Ω c√≥ th·ªÉ:\nThi·∫øt l·∫≠p trigger t·ª´ Amazon S3 ƒë·ªÉ kh·ªüi t·∫°o quy tr√¨nh x·ª≠ l√Ω khi c√≥ file ƒë∆∞·ª£c upload. X√¢y d·ª±ng chu·ªói Lambda functions ƒë·ªÉ x·ª≠ l√Ω d·ªØ li·ªáu. Thi·∫øt k·∫ø workflow v·ªõi AWS Step Functions: tu·∫ßn t·ª±, song song, ƒëi·ªÅu ki·ªán v√† x·ª≠ l√Ω l·ªói. √Åp d·ª•ng c√°c k·ªπ thu·∫≠t x·ª≠ l√Ω l·ªói: Retry, Catch, Dead Letter Queue. Gi√°m s√°t to√†n b·ªô h·ªá th·ªëng v·ªõi CloudWatch Logs v√† Metrics. N·ªôi dung th·ª±c h√†nh\nT·∫°o S3 bucket v√† c·∫•u h√¨nh s·ª± ki·ªán khi upload file. Vi·∫øt Lambda function ƒë·ªÉ x·ª≠ l√Ω t·ªáp (v√≠ d·ª•: ph√¢n t√≠ch metadata, g·ª≠i SNS). T·∫°o Step Function ƒë·ªÉ ƒëi·ªÅu ph·ªëi nhi·ªÅu Lambda th√†nh m·ªôt workflow. C·∫•u h√¨nh retry logic, x·ª≠ l√Ω ngo·∫°i l·ªá v√† g·ª≠i l·ªói sang SNS/SQS. Ki·ªÉm tra, gi√°m s√°t b·∫±ng CloudWatch v√† x√°c th·ª±c k·∫øt qu·∫£ qua log v√† tr·∫°ng th√°i Step Function. K·∫øt qu·∫£ ƒë·∫°t ƒë∆∞·ª£c\nHo√†n th√†nh m·ªôt h·ªá th·ªëng x·ª≠ l√Ω s·ª± ki·ªán t·ª± ƒë·ªông t·ª´ ƒë·∫ßu v√†o S3. Hi·ªÉu c√°ch ho·∫°t ƒë·ªông c·ªßa ki·∫øn tr√∫c event-driven trong m√¥i tr∆∞·ªùng AWS. L√†m quen v·ªõi m√¥ h√¨nh serverless v√† c√°c k·ªπ thu·∫≠t qu·∫£n l√Ω l·ªói th·ª±c t·∫ø. ·ª®ng d·ª•ng ƒë∆∞·ª£c ki·∫øn th·ª©c v√†o c√°c b√†i to√°n th·ª±c t·∫ø nh∆∞: x·ª≠ l√Ω log, resize ·∫£nh, ph√¢n t√≠ch d·ªØ li·ªáu ƒë·∫ßu v√†o "
},
{
	"uri": "//localhost:1313/vi/5--monitoringwithcloudwatch/5.1-check-logs-from-lambda-and-step-functions/",
	"title": "Ki·ªÉm tra log t·ª´ Lambda v√† Step Functions",
	"tags": [],
	"description": "",
	"content": "Logs c·ªßa Lambda Function Truy c·∫≠p CloudWatch Console\nCh·ªçn Logs ‚Üí Log groups\nT√¨m theo t√™n h√†m: /aws/lambda/s3PreprocessFunction, processFileFunction, storeResultFunction\nCh·ªçn group ‚Üí click log stream ƒë·ªÉ xem chi ti·∫øt t·ª´ng l·∫ßn invoke Logs c·ªßa Step Function Truy c·∫≠p l·∫°i Step Functions Console\nCh·ªçn state machine FileProcessingWorkflow\nNh·∫•n v√†o execution b·∫•t k·ª≥ ‚Üí tab Execution events s·∫Ω hi·ªÉn th·ªã chi ti·∫øt:\nInput/Output t·ª´ng b∆∞·ªõc\nTr·∫°ng th√°i succeed/fail: Error message n·∫øu c√≥ l·ªói "
},
{
	"uri": "//localhost:1313/vi/3-accessibilitytoinstances/3.1-s3/",
	"title": "T·∫°o S3 Bucket",
	"tags": [],
	"description": "",
	"content": "B∆∞·ªõc 1: Truy c·∫≠p giao di·ªán t·∫°o bucket\nƒê·∫£m b·∫£o b·∫°n ƒëang ƒëƒÉng nh·∫≠p b·∫±ng t√†i kho·∫£n AWS v√† ·ªü v√πng Asia Pacific (Singapore) - ap-southeast-1 B∆∞·ªõc 2: Nh·∫≠p th√¥ng tin Bucket\nBucket name (t√™n duy nh·∫•t to√†n c·ª•c):\nV√≠ d·ª•: event-driven-demo-bucket-2025\nG·ª£i √Ω: d√πng t√™n ng·∫Øn g·ªçn, kh√¥ng ch·ª©a kho·∫£ng tr·∫Øng ho·∫∑c k√Ω t·ª± ƒë·∫∑c bi·ªát\nüåç AWS Region:\nM·∫∑c ƒë·ªãnh l√† Asia Pacific (Singapore) ap-southeast-1 ‚Äî gi·ªØ nguy√™n n·∫øu b·∫°n d√πng c√πng v√πng cho Lambda, Step Functions\nB∆∞·ªõc 3: Thi·∫øt l·∫≠p Public Access\nTrong m·ª•c Block Public Access settings for this bucket: ‚úÖ B·ªè tick ·ªü d√≤ng: Block all public access\nAWS s·∫Ω hi·ªán c·∫£nh b√°o ‚Üí b·∫°n tick v√†o √¥ x√°c nh·∫≠n ‚ÄúI acknowledge‚Ä¶‚Äù üìå L√Ω do: B·∫°n c·∫ßn b·∫≠t quy·ªÅn truy c·∫≠p trong m·ªôt s·ªë t√¨nh hu·ªëng nh∆∞ t·∫£i t·ªáp ho·∫∑c t√≠ch h·ª£p Lambda (c√≥ th·ªÉ gi·ªõi h·∫°n b·∫±ng IAM policy sau n√†y)\nB∆∞·ªõc 4: Bucket Versioning (tu·ª≥ ch·ªçn)\nN·∫øu kh√¥ng c·∫ßn theo d√µi l·ªãch s·ª≠ phi√™n b·∫£n file, ch·ªçn Disable\nN·∫øu b·∫°n mu·ªën b·∫≠t t√≠nh nƒÉng kh√¥i ph·ª•c file c≈©, ch·ªçn Enable\nB∆∞·ªõc 5: Tags (tu·ª≥ ch·ªçn)\nC√≥ th·ªÉ th√™m tags nh∆∞:\nProject: S3EventWorkshop\nOwner: your-name\nKh√¥ng b·∫Øt bu·ªôc, nh∆∞ng gi√∫p qu·∫£n l√Ω chi ph√≠ \u0026amp; l·ªçc b√°o c√°o t·ªët h∆°n.\nB∆∞·ªõc 6: Encryption\nB·∫°n c√≥ th·ªÉ ch·ªçn:\nDisable (n·∫øu ch·ªâ test)\nHo·∫∑c S3-managed keys (SSE-S3) n·∫øu mu·ªën m√£ h√≥a m·∫∑c ƒë·ªãnh cho m·ªçi t·ªáp\nB∆∞·ªõc 7: Advanced Settings\nKh√¥ng c·∫ßn thay ƒë·ªïi n·∫øu b·∫°n ch·ªâ s·ª≠ d·ª•ng cho m·ª•c ƒë√≠ch x·ª≠ l√Ω s·ª± ki·ªán. ƒê·ªÉ m·∫∑c ƒë·ªãnh. B∆∞·ªõc 8: Nh·∫•n ‚ÄúCreate bucket‚Äù\nXem l·∫°i to√†n b·ªô thi·∫øt l·∫≠p\nCu·ªëi trang ‚Üí nh·∫•n Create bucket\n"
},
{
	"uri": "//localhost:1313/vi/4-step-function-workflow/4.1-create-lambda-functions/",
	"title": "T·∫°o th√™m Lambda Functions (X·ª≠ l√Ω ch√≠nh v√† l∆∞u k·∫øt qu·∫£)",
	"tags": [],
	"description": "",
	"content": "T·∫°o Lambda x·ª≠ l√Ω n·ªôi dung (processFileFunction) Truy c·∫≠p Lambda Console\nNh·∫•n Create function\nƒêi·ªÅn th√¥ng tin:\nFunction name: processFileFunction\nRuntime: Python 3.12\nExecution role: Use existing role ‚Üí ch·ªçn LambdaEventProcessingRole\nNh·∫•n Create function Trong m·ª•c Code, d√°n:\ndef lambda_handler(event, context): print(\u0026#34;Processing file content...\u0026#34;) return { \u0026#34;status\u0026#34;: \u0026#34;processed\u0026#34;, \u0026#34;filename\u0026#34;: event.get(\u0026#34;filename\u0026#34;, \u0026#34;unknown\u0026#34;) } Nh·∫•n Deploy T·∫°o Lambda l∆∞u k·∫øt qu·∫£ (storeResultFunction) Ti·∫øp t·ª•c t·∫°o function m·ªõi:\nFunction name: storeResultFunction\nRuntime: Python 3.12\nExecution role: LambdaEventProcessingRole\nCode m·∫´u:\ndef lambda_handler(event, context): print(\u0026#34;Storing result...\u0026#34;) print(\u0026#34;Input from previous step:\u0026#34;, event) return { \u0026#34;status\u0026#34;: \u0026#34;stored\u0026#34;, \u0026#34;original\u0026#34;: event } Nh·∫•n Deploy "
},
{
	"uri": "//localhost:1313/vi/5--monitoringwithcloudwatch/5.2-create-alerts-with-cloudwatch-alarm/",
	"title": "T·∫°o c·∫£nh b√°o v·ªõi CloudWatch Alarm",
	"tags": [],
	"description": "",
	"content": "C·∫£nh b√°o khi Lambda l·ªói nhi·ªÅu l·∫ßn V√†o l·∫°i CloudWatch Console\nTrong menu tr√°i, ch·ªçn Alarms ‚Üí All alarms ‚Üí Create alarm\nB·∫•m Select metric\nƒêi·ªÅu h∆∞·ªõng:\nBrowse ‚Üí ch·ªçn Lambda\n‚Üí By Function Name\n‚Üí ch·ªçn function processFileFunction\nCh·ªçn metric Errors ‚Üí Select metric Thi·∫øt l·∫≠p ƒëi·ªÅu ki·ªán:\nStatistic: Sum\nPeriod: 5 minutes\nThreshold type: Static\nDefine threshold: Greater than 1 Nh·∫•n Next\nThi·∫øt l·∫≠p h√†nh ƒë·ªông:\nNotification:\nCh·ªçn ho·∫∑c t·∫°o SNS Topic (n·∫øu ch∆∞a c√≥, ch·ªçn ‚ÄúCreate new topic‚Äù)\nNh·∫≠p email nh·∫≠n c·∫£nh b√°o\nSau khi t·∫°o, nh·ªõ x√°c nh·∫≠n email g·ª≠i t·ª´ AWS\nƒê·∫∑t t√™n alarm: LambdaErrorAlarm Nh·∫•n Create alarm C·∫£nh b√°o khi Step Function th·∫•t b·∫°i B∆∞·ªõc 1: Truy c·∫≠p Metrics c·ªßa Step Functions V√†o AWS Console: CloudWatch\nV√†o Metrics ‚Üí ch·ªçn Browse Ch·ªçn nh√≥m d·ªãch v·ª• States ‚Üí ti·∫øp t·ª•c ch·ªçn Execution Metrics T√¨m ƒë·∫øn metric: ExecutionsFailed c·ªßa state machine FileProcessingWorkflow B∆∞·ªõc 2: T·∫°o Alarm Tick v√†o d√≤ng ExecutionsFailed\nNh·∫•n n√∫t Create alarm (g√≥c ph·∫£i tr√™n)\nB∆∞·ªõc 3: C·∫•u h√¨nh ƒëi·ªÅu ki·ªán c·∫£nh b√°o Metric: ExecutionsFailed\nStatistic: Sum\nPeriod: 5 minutes\nCondition: Greater than 0\nThreshold type: Static\nB∆∞·ªõc 4: G√°n h√†nh ƒë·ªông c·∫£nh b√°o Ch·ªçn In alarm\nCh·ªçn SNS Topic ƒë√£ t·∫°o tr∆∞·ªõc ƒë√≥ ƒë·ªÉ nh·∫≠n email\nN·∫øu ch∆∞a c√≥, nh·∫•n Create new topic, nh·∫≠p email v√† x√°c nh·∫≠n email t·ª´ AWS\nB∆∞·ªõc 5: ƒê·∫∑t t√™n v√† t·∫°o alarm Alarm name: StepFunctionFailureAlarm\nNh·∫•n Next, r·ªìi Create alarm\n‚úÖ K·∫øt qu·∫£: Sau khi t·∫°o xong, h·ªá th·ªëng s·∫Ω theo d√µi v√† g·ª≠i c·∫£nh b√°o n·∫øu Step Function th·∫•t b·∫°i trong kho·∫£ng th·ªùi gian 5 ph√∫t.\n‚úÖ K·∫øt qu·∫£ sau khi c·∫•u h√¨nh CloudWatch ghi log cho t·∫•t c·∫£ c√°c h√†m Lambda v√† Step Function\nC·∫£nh b√°o s·∫Ω g·ª≠i email n·∫øu h·ªá th·ªëng b·ªã l·ªói\nGi√∫p b·∫°n d·ªÖ d√†ng gi√°m s√°t, nhanh ch√≥ng ph·∫£n ·ª©ng n·∫øu workflow h·ªèng\n"
},
{
	"uri": "//localhost:1313/vi/3-accessibilitytoinstances/3.2-iam-role/",
	"title": "T·∫°o IAM Role cho Lambda",
	"tags": [],
	"description": "",
	"content": "B∆∞·ªõc 1: M·ªü trang t·∫°o Role\nV√†o IAM Roles\nNh·∫•n n√∫t ‚ÄúCreate role‚Äù (g√≥c ph·∫£i tr√™n)\nB∆∞·ªõc 2: Ch·ªçn Trusted Entity (Lambda service)\n·ªû m·ª•c Trusted entity type, ch·ªçn \u0026ldquo;AWS service\u0026rdquo; Trong ph·∫ßn ‚ÄúUse case‚Äù, ch·ªçn \u0026ldquo;Lambda\u0026rdquo;\nNh·∫•n Next\nB∆∞·ªõc 3: G√°n quy·ªÅn (Attach policies)\nT√¨m v√† tick ch·ªçn 3 policies sau: Policy name\tM·ª•c ƒë√≠ch:\nAmazonS3ReadOnlyAccess: Cho ph√©p Lambda ƒë·ªçc object t·ª´ S3\nCloudWatchLogsFullAccess: Ghi log v√†o CloudWatch\nAWSStepFunctionsFullAccess: Cho ph√©p Lambda g·ªçi Step Functions ho·∫∑c Step Functions invoke Lambda\nNh·∫•n Next\nB∆∞·ªõc 4 G√°n t√™n v√† m√¥ t·∫£\nRole name: LambdaEventProcessingRole\nDescription (tu·ª≥ ch·ªçn): Role for Lambda functions to access S3, Step Functions and CloudWatch\nNh·∫•n Create role\nB∆∞·ªõc 5: Ki·ªÉm tra Role ƒë√£ t·∫°o\nTrong danh s√°ch IAM Roles, t√¨m LambdaEventProcessingRole\nClick v√†o t√™n role ƒë·ªÉ m·ªü chi ti·∫øt\nX√°c nh·∫≠n:\nTrusted entity: lambda.amazonaws.com\nPolicies attached: g·ªìm ƒë·ªß 3 quy·ªÅn ƒë√£ ch·ªçn\n‚úÖ K·∫øt qu·∫£\nB·∫°n ƒë√£ t·∫°o xong IAM Role t√™n LambdaEventProcessingRole cho c√°c Lambda functions d√πng trong workflow x·ª≠ l√Ω s·ª± ki·ªán. Role n√†y s·∫Ω ƒë∆∞·ª£c g√°n cho c√°c h√†m nh∆∞:\ns3PreprocessFunction\nprocessFileFunction\nstoreResultFunction\n"
},
{
	"uri": "//localhost:1313/vi/4-step-function-workflow/4.2-createworkflow/",
	"title": "T·∫°o Step Functions Workflow",
	"tags": [],
	"description": "",
	"content": " Truy c·∫≠p Step Functions Truy c·∫≠p giao di·ªán Step Functions Console\nNh·∫•n Create state machine\nNh·∫≠p t√™n FileProcessingWorkflow\nCh·ªçn Author with code snippets\nNh·∫≠p c·∫•u h√¨nh JSON Workflow:\n·ªû tab Definition, d√°n ƒëo·∫°n m√£ sau (nh·ªõ s·ª≠a id c·ªßa b·∫°n): {\r\u0026#34;StartAt\u0026#34;: \u0026#34;Process File\u0026#34;,\r\u0026#34;States\u0026#34;: {\r\u0026#34;Process File\u0026#34;: {\r\u0026#34;Type\u0026#34;: \u0026#34;Task\u0026#34;,\r\u0026#34;Resource\u0026#34;: \u0026#34;arn:aws:lambda:ap-southeast-1:\u0026lt;account-id\u0026gt;:function:processFileFunction\u0026#34;,\r\u0026#34;Next\u0026#34;: \u0026#34;Store Result\u0026#34;,\r\u0026#34;Retry\u0026#34;: [\r{\r\u0026#34;ErrorEquals\u0026#34;: [\u0026#34;States.ALL\u0026#34;],\r\u0026#34;IntervalSeconds\u0026#34;: 2,\r\u0026#34;MaxAttempts\u0026#34;: 2\r}\r],\r\u0026#34;Catch\u0026#34;: [\r{\r\u0026#34;ErrorEquals\u0026#34;: [\u0026#34;States.ALL\u0026#34;],\r\u0026#34;Next\u0026#34;: \u0026#34;Fail Handler\u0026#34;\r}\r]\r},\r\u0026#34;Store Result\u0026#34;: {\r\u0026#34;Type\u0026#34;: \u0026#34;Task\u0026#34;,\r\u0026#34;Resource\u0026#34;: \u0026#34;arn:aws:lambda:ap-southeast-1:\u0026lt;account-id\u0026gt;:function:storeResultFunction\u0026#34;,\r\u0026#34;End\u0026#34;: true\r},\r\u0026#34;Fail Handler\u0026#34;: {\r\u0026#34;Type\u0026#34;: \u0026#34;Fail\u0026#34;,\r\u0026#34;Error\u0026#34;: \u0026#34;WorkflowFailed\u0026#34;,\r\u0026#34;Cause\u0026#34;: \u0026#34;Lambda function failed\u0026#34;\r}\r}\r} üìå Gi·∫£i th√≠ch:\nRetry: t·ª± ƒë·ªông ch·∫°y l·∫°i n·∫øu Lambda l·ªói\nCatch: chuy·ªÉn h∆∞·ªõng ƒë·∫øn b∆∞·ªõc Fail Handler n·∫øu t·∫•t c·∫£ retry th·∫•t b·∫°i\nT·∫°o workflow Nh·∫•n Next\nKi·ªÉm tra l·∫°i t√™n, role, quy·ªÅn\nNh·∫•n Create state machine\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/",
	"title": "T·ªïng quan ki·∫øn tr√∫c",
	"tags": [],
	"description": "",
	"content": "\rT√†i kho·∫£n AWS c√≥ quy·ªÅn s·ª≠ d·ª•ng S3, Lambda, Step Functions, IAM. Hi·ªÉu c∆° b·∫£n v·ªÅ AWS Lambda v√† Amazon S3. Bi·∫øt c√°ch t·∫°o role, policy v√† d√πng AWS Console ho·∫∑c AWS CLI.\nH·ªá th·ªëng x·ª≠ l√Ω s·ª± ki·ªán n√¢ng cao ƒë∆∞·ª£c thi·∫øt k·∫ø theo ki·∫øn tr√∫c event-driven, s·ª≠ d·ª•ng c√°c th√†nh ph·∫ßn kh√¥ng m√°y ch·ªß (serverless) gi√∫p m·ªü r·ªông linh ho·∫°t v√† t·ªëi ∆∞u chi ph√≠.\nLu·ªìng x·ª≠ l√Ω s·ª± ki·ªán t·ª´ng b∆∞·ªõc: Upload file v√†o S3: Ng∆∞·ªùi d√πng ho·∫∑c h·ªá th·ªëng kh√°c t·∫£i t·ªáp (·∫£nh, CSV, JSON, log,\u0026hellip;) v√†o m·ªôt S3 bucket. S3 ph√°t sinh s·ª± ki·ªán: S3 k√≠ch ho·∫°t s·ª± ki·ªán s3:ObjectCreated:* v√† g·ª≠i th√¥ng tin file qua SNS ho·∫∑c tr·ª±c ti·∫øp ƒë·∫øn Lambda. Lambda ƒë·∫ßu ti√™n (preprocessing): X·ª≠ l√Ω metadata, ki·ªÉm tra ƒë·ªãnh d·∫°ng, l·ªçc file l·ªói, tr√≠ch xu·∫•t th√¥ng tin c∆° b·∫£n.\nN·∫øu h·ª£p l·ªá ‚Üí ti·∫øp t·ª•c x·ª≠ l√Ω.\nN·∫øu kh√¥ng h·ª£p l·ªá ‚Üí ghi log l·ªói v√† d·ª´ng.\nStep Function orchestration: Step Functions ƒëi·ªÅu ph·ªëi to√†n b·ªô quy tr√¨nh CloudWatch gi√°m s√°t: T·ª´ng Lambda s·∫Ω ghi log v√†o CloudWatch Logs.\nStep Functions c√≥ th·ªÉ ƒë∆∞·ª£c theo d√µi theo execution status.\nTh√¥ng b√°o k·∫øt qu·∫£: K·∫øt qu·∫£ th√†nh c√¥ng ho·∫∑c l·ªói s·∫Ω ƒë∆∞·ª£c g·ª≠i ƒë·∫øn ng∆∞·ªùi d√πng qua SNS, Email, ho·∫∑c l∆∞u log. "
},
{
	"uri": "//localhost:1313/vi/3-accessibilitytoinstances/3.3-lambda-function/",
	"title": "T·∫°o Lambda Function: Ti·ªÅn x·ª≠ l√Ω",
	"tags": [],
	"description": "",
	"content": "B∆∞·ªõc 1: Truy c·∫≠p Lambda Console\nNh·∫•n ‚ÄúCreate function‚Äù\nC·∫•u h√¨nh Lambda Function\nT·∫°i m·ª•c Basic information:\nFunction name: s3PreprocessFunction\nRuntime: ch·ªçn Python 3.12 (ho·∫∑c Node.js 18.x n·∫øu b·∫°n mu·ªën d√πng JavaScript)\nT·∫°i m·ª•c Execution role ch·ªçn: Use an existing role\n·ªû dropdown ‚ÄúExisting role‚Äù ch·ªçn: LambdaEventProcessingRole\nNh·∫•n n√∫t Create function\nB∆∞·ªõc 2: Vi·∫øt m√£ x·ª≠ l√Ω\nSau khi function ƒë∆∞·ª£c t·∫°o, b·∫°n s·∫Ω ƒë∆∞·ª£c ƒë∆∞a ƒë·∫øn trang Code c·ªßa h√†m.\nTrong ph·∫ßn Code source, nh·∫≠p ƒëo·∫°n m√£ sau:\nexport const handler = async (event) =\u0026gt; {\rconsole.log(\u0026#34;Received event:\u0026#34;, event);\rreturn {\rstatusCode: 200,\rbody: \u0026#39;Preprocessing complete\u0026#39;\r};\r}; Nh·∫•n n√∫t Deploy (g√≥c tr√™n b√™n ph·∫£i v√πng code) üìå Sau khi Deploy, Lambda ƒë√£ s·∫µn s√†ng x·ª≠ l√Ω s·ª± ki·ªán t·ª´ S3.\nB∆∞·ªõc 3: test Lambda function tr√™n AWS Console\nƒê·∫∑t t√™n test event: \u0026ldquo;TestS3Preprocess\u0026rdquo; Nh·∫≠p n·ªôi dung s·ª± ki·ªán JSON { \u0026#34;Records\u0026#34;: [ { \u0026#34;s3\u0026#34;: { \u0026#34;bucket\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;event-driven-demo-bucket\u0026#34; }, \u0026#34;object\u0026#34;: { \u0026#34;key\u0026#34;: \u0026#34;example.csv\u0026#34; } } } ] } Nh·∫•n n√∫t Save v√† sau ƒë√≥ Test B∆∞·ªõc 4: Xem k·∫øt qu·∫£\nN·∫øu Lambda ch·∫°y th√†nh c√¥ng, b·∫°n s·∫Ω th·∫•y: { \u0026#34;statusCode\u0026#34;: 200, \u0026#34;body\u0026#34;: \u0026#34;Preprocessing complete\u0026#34; } V√† log ·ªü b√™n d∆∞·ªõi s·∫Ω in ra s·ª± ki·ªán b·∫°n v·ª´a g·ª≠i: START RequestId: ...\rReceived event: { ... }\rEND RequestId: ... ‚úÖ K·∫øt lu·∫≠n\nB·∫°n ƒë√£ test xong Lambda function v·ªõi s·ª± ki·ªán gi·∫£ l·∫≠p. N·∫øu b·∫°n t√≠ch h·ª£p trigger t·ª´ S3 sau n√†y, s·ª± ki·ªán th·∫≠t s·∫Ω c√≥ c·∫•u tr√∫c gi·ªëng m·∫´u JSON m√¨nh cung c·∫•p ·ªü tr√™n.\n"
},
{
	"uri": "//localhost:1313/vi/5--monitoringwithcloudwatch/5.3.test/",
	"title": "Test c·∫£nh b√°o",
	"tags": [],
	"description": "",
	"content": "Test 1: K√≠ch ho·∫°t c·∫£nh b√°o khi Lambda l·ªói nhi·ªÅu l·∫ßn üéØ M·ª•c ti√™u: K√≠ch ho·∫°t CloudWatch Alarm ƒë√£ c·∫•u h√¨nh cho processFileFunction (ho·∫∑c Lambda n√†o b·∫°n ƒë√£ ch·ªçn), b·∫±ng c√°ch c·ªë t√¨nh l√†m Lambda th·∫•t b·∫°i nhi·ªÅu l·∫ßn trong 5 ph√∫t.\nB∆∞·ªõc 1: S·ª≠a Lambda ƒë·ªÉ g√¢y l·ªói c·ªë t√¨nh V√†o AWS Lambda Console\nM·ªü h√†m Lambda (processFileFunction)\nCh·ªçn tab Code\nThay code nh∆∞ sau (Node.js ho·∫∑c Python) ƒë·ªÉ lu√¥n l·ªói:\nV·ªõi Python:\ndef lambda_handler(event, context):\rraise Exception(\u0026#34;Forced test error\u0026#34;) Nh·∫•n Deploy ƒë·ªÉ √°p d·ª•ng thay ƒë·ªïi B∆∞·ªõc 2: G·ªçi Lambda li√™n t·ª•c ƒë·ªÉ t·∫°o l·ªói T·∫°i Lambda Console ‚Üí ch·ªçn tab Test\nT·∫°o event test m·∫´u:\n{\r\u0026#34;test\u0026#34;: true\r} Nh·∫•n Test t·ª´ 3‚Äì5 l·∫ßn li√™n t·ª•c trong v√≤ng 1‚Äì2 ph√∫t üìå M·ª•c ti√™u: C√≥ nhi·ªÅu l·∫ßn g·ªçi th·∫•t b·∫°i ‚Üí t·ªïng s·ªë Errors \u0026gt; 1 trong 5 ph√∫t\nB∆∞·ªõc 3: Theo d√µi c·∫£nh b√°o\nV√†o CloudWatch ‚Üí Alarms Xem alarm LambdaErrorAlarm c√≥ chuy·ªÉn t·ª´ tr·∫°ng th√°i OK ‚Üí ALARM kh√¥ng (m·∫•t v√†i ph√∫t)\nKi·ªÉm tra email nh·∫≠n c·∫£nh b√°o n·∫øu g·∫Øn SNS Topic\nTest 2: K√≠ch ho·∫°t c·∫£nh b√°o khi Step Function th·∫•t b·∫°i B∆∞·ªõc 1: V√†o Step Functions Console\nM·ªü FileProcessingWorkflow.\nNh·∫•n ‚ÄúStart execution‚Äù\nNh·∫≠p Input nh∆∞ sau (tu·ª≥ b·∫°n code th·∫ø n√†o, nh∆∞ng h√£y d√πng input khi·∫øn Lambda g·ªçi l·ªói):\n{\r\u0026#34;simulateError\u0026#34;: true\r} Ho·∫∑c n·∫øu b·∫°n kh√¥ng x·ª≠ l√Ω input: ch·ªâ c·∫ßn ƒë·ªÉ Lambda trong step raise Exception(\u0026hellip;) m·∫∑c ƒë·ªãnh l√† ƒë·ªß.\nCh·∫°y workflow ‚Üí ƒë·ªÉ n√≥ l·ªói\nKi·ªÉm tra Execution status: ph·∫£i l√† Failed\nB∆∞·ªõc 2: Sau khi ch·∫°y l·ªói:\nCh·ªù kho·∫£ng 1‚Äì5 ph√∫t\nCloudWatch s·∫Ω c·∫≠p nh·∫≠t metric ExecutionsFailed \u0026gt;\nB∆∞·ªõc 3: Ki·ªÉm tra l·∫°i alarm:\nV√†o l·∫°i CloudWatch ‚Üí Alarms\nN·∫øu th·∫•y StepFunctionFailureAlarm chuy·ªÉn t·ª´ ‚ùî Insufficient data sang üî¥ In alarm l√† b·∫°n test th√†nh c√¥ng\nKi·ªÉm tra email (n·∫øu b·∫°n ƒë√£ g·∫Øn SNS topic v√†o alarm ƒë√≥ v√† x√°c nh·∫≠n email): B·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c c·∫£nh b√°o l·ªói Step Function.\nKi·ªÉm tra email (n·∫øu b·∫°n ƒë√£ g·∫Øn SNS topic v√†o alarm ƒë√≥ v√† x√°c nh·∫≠n email): "
},
{
	"uri": "//localhost:1313/vi/3-accessibilitytoinstances/",
	"title": "Chu·∫©n b·ªã m√¥i tr∆∞·ªùng v√† t√†i nguy√™n",
	"tags": [],
	"description": "",
	"content": "Trong ph·∫ßn n√†y, ch√∫ng ta s·∫Ω thi·∫øt l·∫≠p c√°c th√†nh ph·∫ßn c∆° b·∫£n c·∫ßn thi·∫øt ƒë·ªÉ b·∫Øt ƒë·∫ßu workshop, s·ª≠ d·ª•ng AWS Management Console ho√†n to√†n (kh√¥ng d√πng CLI/CDK).\nN√¥Ã£i dung 3.1. TaÃ£o S3 bucket 3.2. T·∫°o IAM Role cho Lambda 3.4. T·∫°o Lambda Function: Ti·ªÅn x·ª≠ l√Ω 3.5. Thi·∫øt l·∫≠p Trigger t·ª´ S3 ƒë·∫øn Lambda\n"
},
{
	"uri": "//localhost:1313/vi/4-step-function-workflow/",
	"title": "T·∫°o Step Function Workflow",
	"tags": [],
	"description": "",
	"content": "Trong ph·∫ßn n√†y, b·∫°n s·∫Ω x√¢y d·ª±ng m·ªôt workflow ƒëi·ªÅu ph·ªëi nhi·ªÅu b∆∞·ªõc x·ª≠ l√Ω b·∫±ng AWS Step Functions. M·ªói b∆∞·ªõc g·ªçi m·ªôt Lambda function c·ª• th·ªÉ, k√®m theo kh·∫£ nƒÉng retry v√† b·∫Øt l·ªói (error catching).\nN√¥Ã£i dung: T·∫°o th√™m Lambda Functions T·∫°o Workflow b·∫±ng Step Functions "
},
{
	"uri": "//localhost:1313/vi/5--monitoringwithcloudwatch/",
	"title": "Gi√°m s√°t v·ªõi CloudWatch",
	"tags": [],
	"description": "",
	"content": "Gi√°m s√°t v√† Logging v·ªõi Amazon CloudWatch CloudWatch l√† c√¥ng c·ª• gi√°m s√°t m·∫∑c ƒë·ªãnh trong AWS, gi√∫p b·∫°n theo d√µi log, tr·∫°ng th√°i, v√† hi·ªáu su·∫•t c·ªßa c√°c Lambda function c≈©ng nh∆∞ Step Functions. Trong ph·∫ßn n√†y, ch√∫ng ta s·∫Ω c·∫•u h√¨nh CloudWatch Logs v√† thi·∫øt l·∫≠p c·∫£nh b√°o n·∫øu workflow th·∫•t b·∫°i.\nN√¥Ã£i dung: Ki·ªÉm tra log t·ª´ Lambda v√† Step Functions T·∫°o c·∫£nh b√°o v·ªõi CloudWatch Alarm Test c·∫£nh b√°o "
},
{
	"uri": "//localhost:1313/vi/3-accessibilitytoinstances/3.4-trigger/",
	"title": "Thi·∫øt l·∫≠p Trigger t·ª´ S3 ƒë·∫øn Lambda",
	"tags": [],
	"description": "",
	"content": "B∆∞·ªõc 1:\nT√¨m v√† nh·∫•n v√†o t√™n bucket b·∫°n ƒë√£ t·∫°o (v√≠ d·ª•: event-driven-demo-bucket)\nT·∫°o folder uploads v√† up load 1 file .jpg M·ªü ph·∫ßn c·∫•u h√¨nh s·ª± ki·ªán\nTrong giao di·ªán bucket ‚Üí ch·ªçn tab Properties\nCu·ªôn xu·ªëng ph·∫ßn Event notifications\nNh·∫•n n√∫t ‚ÄúCreate event notification‚Äù\nC·∫•u h√¨nh event trigger\nNh·∫≠p t√™n t√πy √Ω, v√≠ d·ª•: TriggerLambdaOnUpload Tick v√†o: ‚úÖ All object create events (ho·∫∑c ch·ªâ PUT n·∫øu b·∫°n ch·ªâ mu·ªën khi upload file) Prefix v√† suffix (t√πy ch·ªçn):\nPrefix (t√πy ch·ªçn): V√≠ d·ª• uploads/ n·∫øu b·∫°n ch·ªâ mu·ªën theo d√µi th∆∞ m·ª•c c·ª• th·ªÉ\nSuffix (t√πy ch·ªçn): .csv n·∫øu b·∫°n ch·ªâ mu·ªën x·ª≠ l√Ω file CSV\n(·ªû v√≠ d·ª• n√†y ta d√πng Suffix)\nDestination:\nCh·ªçn: Lambda function\nT√™n h√†m: s3PreprocessFunction (n√≥ s·∫Ω hi·ªán dropdown ƒë·ªÉ b·∫°n ch·ªçn)\nL∆∞u c·∫•u h√¨nh: Nh·∫•n n√∫t Save changes\n‚úÖ K·∫øt qu·∫£\nM·ªói khi b·∫°n upload m·ªôt file v√†o bucket, Lambda s3PreprocessFunction s·∫Ω t·ª± ƒë·ªông ƒë∆∞·ª£c k√≠ch ho·∫°t.\nB·∫°n c√≥ th·ªÉ v√†o CloudWatch Logs ƒë·ªÉ xem log ghi l·∫°i t·ª´ Lambda sau m·ªói l·∫ßn upload.\nüéØ Ki·ªÉm tra l·∫°i\nTh·ª≠ upload m·ªôt file .txt ho·∫∑c .csv v√†o bucket qua giao di·ªán\nM·ªü AWS CloudWatch Logs ‚Üí t√¨m log group /aws/lambda/s3PreprocessFunction\nT√¨m log group t√™n: /aws/lambda/s3PreprocessFunction\nXem d√≤ng log m·ªõi nh·∫•t ‚Üí b·∫°n s·∫Ω th·∫•y output nh∆∞ sau:\n"
},
{
	"uri": "//localhost:1313/vi/6-cleanup/",
	"title": "D·ªçn d·∫πp t√†i nguy√™n",
	"tags": [],
	"description": "",
	"content": " X√≥a Step Function State Machine Truy c·∫≠p Step Functions Console\nCh·ªçn FileProcessingWorkflow\nNh·∫•n Actions ‚Üí Delete state machine\nX√°c nh·∫≠n x√≥a\nX√≥a c√°c Lambda Functions V√†o Lambda Console\nX√≥a l·∫ßn l∆∞·ª£t c√°c function:\ns3PreprocessFunction\nprocessFileFunction\nstoreResultFunction\nX√≥a bucket S3 Ch·ªçn bucket event-driven-demo-bucket\nEmpty bucket\nX√≥a bucket S3\nX√≥a IAM Role n·∫øu kh√¥ng d√πng cho m·ª•c ƒë√≠ch kh√°c "
},
{
	"uri": "//localhost:1313/vi/",
	"title": "Advanced S3 Event Processing with AWS Lambda and Step Functions",
	"tags": [],
	"description": "",
	"content": "X·ª≠ l√Ω s·ª± ki·ªán n√¢ng cao t·ª´ S3 v·ªõi Lambda v√† Step Functions T·ªïng quan ƒê·ªÅ t√†i t·∫≠p trung x√¢y d·ª±ng m·ªôt h·ªá th·ªëng x·ª≠ l√Ω s·ª± ki·ªán t·ª± ƒë·ªông t·ª´ Amazon S3 b·∫±ng c√°ch s·ª≠ d·ª•ng AWS Lambda v√† Step Functions. H·ªá th·ªëng gi√∫p x·ª≠ l√Ω t·ªáp tin m·ªôt c√°ch linh ho·∫°t, m·ªü r·ªông, c√≥ kh·∫£ nƒÉng ki·ªÉm so√°t l·ªói v√† theo d√µi hi·ªáu qu·∫£. Gi·∫£i ph√°p ph√π h·ª£p v·ªõi c√°c b√†i to√°n x·ª≠ l√Ω d·ªØ li·ªáu l·ªõn nh∆∞ file media, log ho·∫∑c t√†i li·ªáu, ƒë·ªìng th·ªùi t·ªëi ∆∞u hi·ªáu su·∫•t v√† chi ph√≠ v·∫≠n h√†nh.\nN·ªôi dung Gi∆°ÃÅi thi√™Ã£u T·ªïng quan ki·∫øn tr√∫c Chu·∫©n b·ªã m√¥i tr∆∞·ªùng v√† t√†i nguy√™n T·∫°o Step Functions Workflow Gi√°m s√°t v·ªõi CloudWatch D·ªçn d·∫πp t√†i nguy√™n "
},
{
	"uri": "//localhost:1313/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]